{"version":3,"file":"post-page.component.js","sourceRoot":"","sources":["../../Users/jorgeucano/Documents/examples/bootcamp/firebases/public/tmp/broccoli_type_script_compiler-input_base_path-GfYz211r.tmp/0/src/app/post-page/post-page.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAElD,6BAAoD,cAAc,CAAC,CAAA;AAGnE,uBAA4B,cAAc,CAAC,CAAA;AAC3C,QAAO,yBAAyB,CAAC,CAAA;AAQjC;IAOE,2BAAY,EAAe,EAAE,YAAyB;QAPxD,iBAwCC;QAhCG,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC,KAAK,CAAS,IAAI,CAAC,CAAC;QAE5C;;;;;aAKK;QAEH,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAS,IAAI,CAAC;aAE1C,oBAAoB,EAAE;aAEtB,QAAQ,CAAC,UAAA,EAAE;YACV,uCAAuC;YACvC,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAC5C,KAAK,EAAE;oBACL,YAAY,EAAE,IAAI;oBAClB,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC;iBACtB;aACF,CAAC,CAAC;YACH,MAAM,CAAC,EAAE,CAAC;QAEd,CAAC,CAAC,CAAC;IACP,CAAC;IAID,oCAAQ,GAAR;IACA,CAAC;IA5CH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,eAAe;YACzB,WAAW,EAAE,0BAA0B;YACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;SACvC,CAAC;;yBAAA;IAyCF,wBAAC;AAAD,CAAC,AAxCD,IAwCC;AAxCY,yBAAiB,oBAwC7B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { AngularFire, FirebaseListObservable } from 'angularfire2';\nimport { Observable } from 'rxjs/Observable';\n\nimport { RouteParams } from '@ngrx/router';\nimport 'rxjs/add/operator/pluck';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-post-page',\n  templateUrl: 'post-page.component.html',\n  styleUrls: ['post-page.component.css']\n})\nexport class PostPageComponent implements OnInit {\n\n  afi : any;\n  id$: Observable<string>;\n  posts: FirebaseListObservable<any[]>;\n  post$: any;\n\n  constructor(af: AngularFire, routeParams$: RouteParams) {\n    this.afi = af;\n    this.id$ = routeParams$.pluck<string>('id');\n\n    /*this.posts = this.afi.database.list('/POSTS', {\n      query: {\n        orderByChild: 'id',\n        equalTo: 1\n      }\n    });*/\n\n      this.post$ = routeParams$.pluck<string>('id')\n        // only update if `id` changes\n        .distinctUntilChanged()\n        // Request the post from the server when the ID updates\n        .mergeMap(id => {\n          // Mark that we are loading a new post:\n          this.posts = this.afi.database.list('/POSTS', {\n            query: {\n              orderByChild: 'id',\n              equalTo: parseInt(id)\n            }\n          });\n          return \"\";\n\n      });\n  }\n\n\n\n  ngOnInit() {\n  }\n\n}\n"]}